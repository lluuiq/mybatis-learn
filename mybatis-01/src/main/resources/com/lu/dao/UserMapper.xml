<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace 绑定一个指定的Mapper(Dao)接口-->
<!-- 类似于 Class.forName ?-->
<mapper namespace="com.lu.dao.UserMapper">
    <!-- ID 对应接口中的方法名 -->
    <!-- 这里的作用就相当于原本的重写方法 -->
    <!-- resultType 将返回结果给 pojo的User类 (该类已经定义了字段、get与set、toString、构造方法)-->
    <select id="getUserList" resultType="com.lu.pojo.User">
        select * from mybatis.user;
    </select>

    <select id="getUserById" parameterType="int" resultType="com.lu.pojo.User">
        select * from mybatis.user where id=#{id};
    </select>

    <!--对象中的属性可以直接取出来-->
    <insert id="addUser" parameterType="com.lu.pojo.User">
        insert into mybatis.user(id,username,password) values (#{id},#{username},#{password});
    </insert>

    <update id="updateUser" parameterType="com.lu.pojo.User">
        update mybatis.user set username=#{username} , password=#{password} where id=#{id};
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from mybatis.user where id=#{id};
    </delete>

    <insert id="addUser2" parameterType="map">
        insert into mybatis.user (id,username,password) values(#{userID},#{userName},#{passWord});
    </insert>

    <select id="getUserLike" resultType="com.lu.pojo.User">
        select * from mybatis.user where username like "%"#{value}"%";
    </select>
</mapper>